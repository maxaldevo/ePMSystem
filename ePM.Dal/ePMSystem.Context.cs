//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ePM.Dal
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ePMEntities : DbContext
    {
        public ePMEntities()
            : base("name=ePMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LMS_ExceptionLog> LMS_ExceptionLog { get; set; }
        public virtual DbSet<LMS_Modules> LMS_Modules { get; set; }
        public virtual DbSet<LMS_Pages> LMS_Pages { get; set; }
        public virtual DbSet<LMS_Roles> LMS_Roles { get; set; }
        public virtual DbSet<LMS_RolesRights> LMS_RolesRights { get; set; }
        public virtual DbSet<LMS_User> LMS_User { get; set; }
        public virtual DbSet<u_HRGroup> u_HRGroup { get; set; }
        public virtual DbSet<u_HRPersonnel> u_HRPersonnel { get; set; }
        public virtual DbSet<u_HRRoles> u_HRRoles { get; set; }
        public virtual DbSet<u_HRRolesList> u_HRRolesList { get; set; }
        public virtual DbSet<u_PERSBase> u_PERSBase { get; set; }
        public virtual DbSet<u_PERSContacts> u_PERSContacts { get; set; }
        public virtual DbSet<u_TRGroups> u_TRGroups { get; set; }
        public virtual DbSet<u_TRRoom> u_TRRoom { get; set; }
        public virtual DbSet<v_lms_RolesCount> v_lms_RolesCount { get; set; }
        public virtual DbSet<v_userRoles> v_userRoles { get; set; }
        public virtual DbSet<vPersonnel> vPersonnels { get; set; }
        public virtual DbSet<v_GroupsPersonnel> v_GroupsPersonnel { get; set; }
        public virtual DbSet<v_lms_ModulePages> v_lms_ModulePages { get; set; }
        public virtual DbSet<Contracttype> Contracttypes { get; set; }
        public virtual DbSet<AppendixA> AppendixAs { get; set; }
        public virtual DbSet<AppendixB> AppendixBs { get; set; }
        public virtual DbSet<AppendixC> AppendixCs { get; set; }
        public virtual DbSet<AppendixD> AppendixDs { get; set; }
        public virtual DbSet<AppendixE> AppendixEs { get; set; }
        public virtual DbSet<AppendixF> AppendixFs { get; set; }
        public virtual DbSet<Contract_01_09> Contract_01_09 { get; set; }
        public virtual DbSet<Contract_01_10> Contract_01_10 { get; set; }
        public virtual DbSet<Contract_01_11> Contract_01_11 { get; set; }
        public virtual DbSet<Contract_01_12> Contract_01_12 { get; set; }
        public virtual DbSet<Contract_01_E15> Contract_01_E15 { get; set; }
        public virtual DbSet<Contract_01_L01C> Contract_01_L01C { get; set; }
        public virtual DbSet<Contract_01_L03A> Contract_01_L03A { get; set; }
        public virtual DbSet<Contract_01_L03B> Contract_01_L03B { get; set; }
        public virtual DbSet<Contract_01_L09> Contract_01_L09 { get; set; }
        public virtual DbSet<Contract_01_L10> Contract_01_L10 { get; set; }
        public virtual DbSet<Contract_01_L12> Contract_01_L12 { get; set; }
        public virtual DbSet<Contract_01L15> Contract_01L15 { get; set; }
        public virtual DbSet<Contract_01_L15> Contract_01_L15 { get; set; }
        public virtual DbSet<Contract_03_15> Contract_03_15 { get; set; }
        public virtual DbSet<Contract_03_16> Contract_03_16 { get; set; }
        public virtual DbSet<Contract_04_05> Contract_04_05 { get; set; }
        public virtual DbSet<Contract_L01A> Contract_L01A { get; set; }
        public virtual DbSet<Contract_L01B> Contract_L01B { get; set; }
        public virtual DbSet<Contract_L01D> Contract_L01D { get; set; }
        public virtual DbSet<Contract_L02A> Contract_L02A { get; set; }
        public virtual DbSet<Contract_L02B> Contract_L02B { get; set; }
        public virtual DbSet<Contract_QDP510_QF11> Contract_QDP510_QF11 { get; set; }
        public virtual DbSet<Contract_QDP510_QF17> Contract_QDP510_QF17 { get; set; }
    
        public virtual ObjectResult<sp_lms_GetPagesByRole_Result> sp_lms_GetPagesByRole(Nullable<int> roleId, Nullable<int> level)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_lms_GetPagesByRole_Result>("sp_lms_GetPagesByRole", roleIdParameter, levelParameter);
        }
    
        public virtual ObjectResult<sp_lmsModulePagesByRole_Result> sp_lmsModulePagesByRole(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_lmsModulePagesByRole_Result>("sp_lmsModulePagesByRole", roleIdParameter);
        }
    
        public virtual int sp_lms_addNewUser(string fName, string firstName, string lastName, string email, string mobile, string empNo, Nullable<int> roleId, Nullable<int> hRRoleId, ObjectParameter msg)
        {
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("EmpNo", empNo) :
                new ObjectParameter("EmpNo", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var hRRoleIdParameter = hRRoleId.HasValue ?
                new ObjectParameter("HRRoleId", hRRoleId) :
                new ObjectParameter("HRRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_lms_addNewUser", fNameParameter, firstNameParameter, lastNameParameter, emailParameter, mobileParameter, empNoParameter, roleIdParameter, hRRoleIdParameter, msg);
        }
    
        public virtual int sp_updatePositionByPersonnelId(Nullable<int> personelId, string position)
        {
            var personelIdParameter = personelId.HasValue ?
                new ObjectParameter("PersonelId", personelId) :
                new ObjectParameter("PersonelId", typeof(int));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updatePositionByPersonnelId", personelIdParameter, positionParameter);
        }
    }
}
